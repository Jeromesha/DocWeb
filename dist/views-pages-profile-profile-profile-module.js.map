{"version":3,"sources":["./src/app/views/pages/profile/profile/profile.module.ts","./src/app/views/pages/profile/profile/profile.component.ts","./src/app/views/pages/profile/profile/profile.component.html","./src/app/views/pages/profile/profile/profile.component.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACQ;AACW;AAEgB;AACnB;AAEe;AACxB;AACK;AACO;AACD;AACV;AACE;AACI;AACN;AACE;AACE;AACC;AACyB;AAC9B;AAEvD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC9B;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,oEAAgB;KAC9B;CAEJ;;;IA8B4B,CAAC;IAAjB,aAAa;QA5BzB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,oEAAgB,CAAC;YAChC,SAAS,EAAE;gBACP,0EAAW;aACd;YACD,OAAO,EAAE;gBACL,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,0DAAW;gBACX,+FAAiB;gBACjB,4EAAiB;gBACjB,0DAAW;gBACX,mEAAe;gBACf,kEAAmB;gBACnB,kEAAiB;gBACjB,wEAAuB;gBACvB,qEAAa;gBACb,2EAAgB;gBAChB,wEAAe;gBACf,uEAAc;gBACd,qEAAa;gBACb,+EAAkB;gBAClB,uEAAc;gBACd,gFAAkB;gBAClB,yEAAe;gBACf,mGAAgB;aACnB;SACJ,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DwB;AAC+B;AACtC;AACM;AACI;AACE;AACO;AACY;AACd;AACG;AACvB;;IA4BtC,0BAAoB,WAAwB,EAClC,SAAmB,EACnB,KAAqB,EACtB,MAAiB,EAChB,YAA0B,EAC1B,kBAAsC,EACtC,WAAwB,EACxB,aAA4B,EAC5B,SAA2B,EAC3B,SAAmB;QATT,gBAAW,GAAX,WAAW,CAAa;QAClC,cAAS,GAAT,SAAS,CAAU;QACnB,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAW;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAkB;QAC3B,cAAS,GAAT,SAAS,CAAU;QA5B7B,OAAE,GAAG,CAAC,CAAC;QACP,eAAU,GAAG,CAAC,CAAC;QAOf,qBAAgB,GAAG,aAAa,CAAC;QACjC,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,iBAAY,GAAG,IAAI,CAAC;QAIpB,eAAU,GAAG,KAAK,CAAC;QAGnB,eAAU,GAAY,IAAI,CAAC;QAYzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU;QAC7C,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,yCAAyC,CAAC;QACzD,IAAM,WAAW,GAAW,SAAS,CAAC,cAAc,EAAE,CAAC;QACvD,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACf,sBAAsB;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,+CAAoB,GAApB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,QAAQ,EAAE,CAAC,IAAI,CAAC;YAChB,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACtD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzC,SAAS,EAAE,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC;IAEL,CAAC;IAED,8BAAG,GAAH,UAAI,OAAgB;QAApB,iBAgBC;QAfC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACzD,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;gBACnB,IAAI,KAAI,CAAC,IAAI,EAAE;oBACb,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;oBACvC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBAChD,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,IAAI,KAAI,CAAC,YAAY,IAAI,KAAK,EAAE;wBAC9B,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;wBACpB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;qBACzB;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YAC3C,IAAM,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,OAAO,YAAY,0DAAW,EAAE;gBAClC,OAAO,CAAC,aAAa,CAAC;oBACpB,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd,UAAe,WAAgB;QAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IACD,kBAAkB;IAClB,uEAAuE;IACvE,iBAAiB;IACjB,6BAA6B;IAC7B,8BAA8B;IAC9B,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,kCAAO,GAAP,UAAQ,OAAgB;QAAxB,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1C,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA6BC;QA5BC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACrD,IAAI,MAAM,EAAE;oBACV,IAAM,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;oBAC3D,IAAM,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC7C,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBACvD,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBAC7D,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;oBAC7D,QAAQ,KAAI,CAAC,YAAY,EAAE;wBAC1B,KAAK,CAAC;4BACJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BACzB,MAAM;wBACR,KAAK,CAAC;4BACJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BACzB,MAAM;wBACR,KAAK,CAAC;4BACJ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BACzB,MAAM;wBACR;4BACE,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;4BACzB,MAAM;qBACT;oBACD,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,GAAE,GAAG,GAAE,IAAI,CAAC,CAAC;iBACvD;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,6CAAkB,GAAlB,UAAmB,YAAY;QAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;QACvD,GAAG,CAAC,YAAY,GAAG,YAAY,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;gBA9K6B,0DAAW;gBAClC,wDAAQ;gBACR,8DAAc;gBACd,kEAAS;gBAET,2EAAY;gBACZ,wFAAkB;gBAClB,0EAAW;gBACX,6EAAa;gBAJb,oEAAgB;gBAKhB,sDAAQ;;IAOJ,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oFAAuC;;SAExC,CAAC;OACW,gBAAgB,CAgK5B;IAAD,uBAAC;CAAA;AAhK4B;;;;;;;;;;;;;ACjB7B;AAAe,+MAAgJ,oCAAoC,8pBAA8pB,wBAAwB,w4BAAw4B,wBAAwB,GAAG,0BAA0B,iUAAiU,yCAAyC,qWAAqW,wBAAwB,y1BAAy1B,wBAAwB,GAAG,0BAA0B,8TAA8T,yCAAyC,scAAsc,yBAAyB,k3BAAk3B,yBAAyB,GAAG,0BAA0B,gUAAgU,0CAA0C,iVAAiV,wBAAwB,0rBAA0rB,qBAAqB,+MAA+M,wMAAwM,GAAG,eAAe,GAAG,IAAI,EAAE,SAAS,GAAG,giBAAgiB,qBAAqB,GAAG,0BAA0B,6PAA6P,sCAAsC,qWAAqW,wBAAwB,4dAA4d,YAAY,8aAA8a,wBAAwB,GAAG,0BAA0B,wRAAwR,uSAAuS,sBAAsB,obAAob,uBAAuB,2QAA2Q,E;;;;;;;;;;;;ACAj+U;AAAe,yEAAU,8BAA8B,+BAA+B,GAAG,sBAAsB,uBAAuB,GAAG,gBAAgB,uBAAuB,cAAc,aAAa,GAAG,qBAAqB,iBAAiB,iBAAiB,uBAAuB,oBAAoB,GAAG,6CAA6C,20BAA20B,E","file":"views-pages-profile-profile-profile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FeahterIconModule } from 'src/app/core/feather-icon/feather-icon.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\nimport { DirectivesModule } from 'src/app/views/layout/directives/directives.module';\nimport { ProfileComponent } from './profile.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ProfileComponent\n    },\n    {\n        path: ':id/:actionInfo',\n        component: ProfileComponent\n    }\n\n]\n\n@NgModule({\n    declarations: [ProfileComponent],\n    providers: [\n        UserService\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        FormsModule,\n        FeahterIconModule,\n        NgbDropdownModule,\n        FormsModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        OwlDateTimeModule,\n        OwlNativeDateTimeModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatButtonModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        DirectivesModule\n    ]\n})\nexport class ProfileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserSessionService } from 'src/app/services/usersession.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NotifyService } from 'src/app/services/notifyService';\nimport { Lightbox } from 'ngx-lightbox';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  id = 0;\n  actionInfo = 0;\n  form: FormGroup;\n  routeParams: any;\n  pageTitle: string;\n  data: any;\n  submitbtn: string;\n  filesResult: any;\n  selectedFileName = 'Choose File';\n  dropdownSettings: any = {};\n  formEditMode = true;\n  Languages: any[];\n  RollList: any;\n  pattern: RegExp;\n  isReadOnly = false;\n  languageType: any;\n  languageUpdate: any;\n  isDisabled: boolean = true; \n  images: any[];\n  constructor(private formBuilder: FormBuilder,\n    private _location: Location,\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private alertService: AlertService,\n    private userSessionService: UserSessionService,\n    private userService: UserService,\n    private notifyService: NotifyService,\n    private translate: TranslateService,\n    private _lightbox: Lightbox) {\n    this.routeParams = route.snapshot.params;\n    this.id = +this.routeParams.id;\n    this.actionInfo = this.routeParams.actionInfo\n    if (this.id === 0) {\n      this.submitbtn = 'Save';\n    } else {\n      this.submitbtn = 'Update';\n    }\n    if (this.actionInfo == 1) {\n      this.formEditMode = false\n    }\n    this.pattern = /^(?!\\s)(?![\\s\\S]*\\s$)[a-zA-Z0-9\\s()-]+$/;\n    const browserLang: string = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|ta|tl|de|af/) ? browserLang : 'en');\n    this.languageType = userSessionService.getLanguageType();\n  }\n\n  ngOnInit() {\n    this.initializeValidators();\n    this.get(true);\n    // this.getLanguage();\n    this.getRoll(true);\n  }\n\n  initializeValidators() {\n    this.form = this.formBuilder.group({\n      id: [this.id, Validators.required],\n      firstName: [null, [Validators.required]],\n      lastName: [null],\n      email: [null, [Validators.required, Validators.email]],\n      userName: ['', [Validators.required]],\n      mobileNo: [null, [Validators.required]],\n      languageType: ['', [Validators.required]],\n      isProfile: [true],\n    });\n    \n  }\n\n  get(refresh: boolean) {\n    if (this.id > 0) {\n      this.userService.getById(this.id, refresh).subscribe(result => {\n        this.data = result;\n        if (this.data) {\n          this.filesResult = this.data.userPhoto;\n          this.selectedFileName = this.data.userPhotoPath;\n          this.form.patchValue(this.data);\n          if (this.formEditMode == false) {\n            this.form.disable();\n            this.isReadOnly = false;\n          }\n        }\n      });\n      this.isReadOnly = true;\n    }\n  }\n\n  validateFormControl() {\n    Object.keys(this.form.controls).forEach(field => {\n      const control = this.form.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({\n          onlySelf: true\n        });\n      }\n    })\n  }\n  \n  onSearchChange(searchValue: any): void {  \n    this.form.controls['userName'].setValue(searchValue.target.value);\n  }\n  // getLanguage() {\n  //   this.utilityService.getLanguageTypeLookup(true).subscribe(res => {\n  //     if (res) {\n  //       this.Languages = [];\n  //       this.Languages = res;\n  //     }\n  //   });\n  // }\n  \n  getRoll(refresh: boolean) {\n    this.userService.getRoll(true).subscribe(res => {\n      if (res) {\n        this.RollList = [];\n        this.RollList = res;\n      }\n    });\n  }\n  \n  onSubmit() {\n    if (this.form.valid) {\n      this.userService.save(this.form.value).subscribe(result => {\n        if (result) {\n          const msg1 = this.translate.instant('Updatedsuccessfully');\n          const msg3 = this.translate.instant('User');\n         this.updateLanguageType(this.form.value.languageType);\n        this.notifyService.emitChange3(this.form.value.languageType);\n        this.languageType = this.userSessionService.getLanguageType();\n         switch (this.languageType) {\n          case 1:\n            this.translate.use('en');\n            break;\n          case 2:\n            this.translate.use('ta');\n            break;\n          case 3:\n            this.translate.use('tl');\n            break;\n          default:\n            this.translate.use('en');\n            break;\n        }\n        this.alertService.result(result, true, msg3 +' '+ msg1);\n        }\n      });\n    } else {\n      this.validateFormControl();\n    }\n  }\n  \n  updateLanguageType(languageType){\n    const obj = JSON.parse(this.userSessionService.load());\n    obj.languageType = languageType;\n    this.userSessionService.create(obj);\n  }\n\n  onCancel() {\n    this._location.back();\n  }\n\n}\n","export default \"<div class=\\\"d-flex justify-content-between align-items-center flex-wrap grid-margin\\\">\\n    <div>\\n        <h4 class=\\\"mb-3 mb-md-0\\\">&nbsp;{{'InformationaboutUser' | translate}}</h4>\\n    </div>\\n</div>\\n<div class=\\\"row text-left\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-content\\\">\\n                <div class=\\\"card-body login-img\\\">\\n                    <div class=\\\"px-3\\\">\\n                        <form [formGroup]=\\\"form\\\" class=\\\"form form-horizontal\\\" novalidate>\\n                            <div class=\\\"form-body pt-2\\\">\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"mandatory \\\">{{'MobileNo' | translate}}</label>\\n                                            <input type=\\\"text\\\" (input)=\\\"onSearchChange($event)\\\" minlength=\\\"10\\\"\\n                                                maxlength=\\\"10\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\"\\n                                                autocomplete=\\\"off\\\" onlyNumber [disabled]=\\\"isDisabled\\\">\\n                                            <div class=\\\"valid-error\\\"\\n                                                *ngIf=\\\"form.controls.mobileNo.errors && (form.controls.mobileNo.dirty || form.controls.userName.touched)\\\"\\n                                                text-wrap>\\n                                                <span *ngIf=\\\"form.controls.mobileNo.errors?.required\\\"\\n                                                    class=\\\"form-text text-muted danger mandatory\\\">\\n                                                    {{'MobileNo' | translate}} {{'IsRequired' | translate}} </span>\\n                                                <span class=\\\"form-text text-muted danger mandatory \\\"\\n                                                    *ngIf=\\\"form.get('mobileNo').hasError('minlength') && !form.get('mobileNo').hasError('required')\\\">\\n                                                    {{'PleaseentervalidmobileNo' | translate }} </span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"mandatory\\\">{{'Username' | translate}}</label>\\n                                            <input type=\\\"text\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n                                                formControlName=\\\"userName\\\" autocomplete=\\\"off\\\" [disabled]=\\\"isDisabled\\\"\\n                                                avoidscripttags>\\n                                            <div class=\\\"valid-error\\\"\\n                                                *ngIf=\\\"form.controls.userName.errors && (form.controls.userName.dirty || form.controls.userName.touched)\\\"\\n                                                text-wrap>\\n                                                <span *ngIf=\\\"form.controls.userName.errors?.required\\\"\\n                                                    class=\\\"form-text text-muted danger mandatory\\\">\\n                                                    {{'Username' | translate}} {{'IsRequired' | translate}}</span>\\n                                                <span class=\\\"form-text text-muted danger mandatory \\\"\\n                                                    *ngIf=\\\"form.get('userName').hasError('pattern') && !form.get('userName').hasError('required')\\\">\\n                                                    {{'PleaseentervalidUsername' | translate }} </span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"mandatory\\\">{{'FirstName' | translate}}</label>\\n                                            <input type=\\\"text\\\" maxlength=\\\"80\\\" class=\\\"form-control\\\"\\n                                                formControlName=\\\"firstName\\\" autocomplete=\\\"off\\\" [pattern]='pattern'\\n                                                [disabled]=\\\"isDisabled\\\" avoidscripttags>\\n                                            <div class=\\\"valid-error\\\"\\n                                                *ngIf=\\\"form.controls.firstName.errors && (form.controls.firstName.dirty || form.controls.firstName.touched)\\\"\\n                                                text-wrap>\\n                                                <span *ngIf=\\\"form.controls.firstName.errors?.required\\\"\\n                                                    class=\\\"form-text text-muted danger mandatory\\\">\\n                                                    {{'FirstName' | translate}} {{'IsRequired' | translate}}</span>\\n                                                <span class=\\\"form-text text-muted danger mandatory \\\"\\n                                                    *ngIf=\\\"form.get('firstName').hasError('pattern') && !form.get('firstName').hasError('required')\\\">\\n                                                    {{'PleaseentervalidFirstName' | translate }} </span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>{{'LastName' | translate}}</label>\\n                                            <input type=\\\"text\\\" [disabled]=\\\"isDisabled\\\" maxlength=\\\"80\\\"\\n                                                class=\\\"form-control\\\" formControlName=\\\"lastName\\\" autocomplete=\\\"off\\\"\\n                                                avoidscripttags>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"mandatory \\\">{{'Email' | translate}}</label>\\n                                            <input type=\\\"email\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\"\\n                                                (keydown.space)=\\\"$event.preventDefault();\\\" formControlName=\\\"email\\\"\\n                                                autocomplete=\\\"off\\\" [disabled]=\\\"isDisabled\\\"\\n                                                pattern=\\\"^[a-zA-Z0-9.-_]{1,}@[a-zA-Z0-9.-]{1,}[.]{1}[a-zA-Z]{2,}$\\\">\\n                                            <div class=\\\"valid-error\\\"\\n                                                *ngIf=\\\"form.controls.email.errors && (form.controls.email.dirty || form.controls.email.touched)\\\"\\n                                                text-wrap>\\n                                                <span *ngIf=\\\"form.controls.email.errors?.required\\\"\\n                                                    class=\\\"form-text text-muted danger mandatory\\\">\\n                                                    {{'Email' | translate}} {{'IsRequired' | translate}}</span>\\n                                                <span class=\\\"form-text text-muted danger\\\"\\n                                                    *ngIf=\\\"form.controls.email.errors.email\\\">\\n                                                    {{'PleaseentervalidEmail' | translate }}</span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"mandatory \\\">{{'Language' | translate}}</label>\\n                                            <select class=\\\"form-control\\\" formControlName=\\\"languageType\\\">\\n                                                <option value=\\\"\\\">\\n                                                    Select\\n                                                </option>\\n                                                <option *ngFor=\\\"let data of Languages\\\" [ngValue]=\\\"data.key\\\">\\n                                                    {{data.value}}\\n                                                </option>\\n                                            </select>\\n                                            <span class=\\\"form-text text-muted danger mandatory \\\"\\n                                                *ngIf=\\\"!form.get('languageType').valid && (form.get('languageType').dirty || form.get('languageType').touched)\\\">\\n                                                {{'Language' | translate}} {{'IsRequired' | translate}}\\n                                            </span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-actions mb-2 mt-3\\\" style=\\\"float: right;\\\">\\n                                    <button type=\\\"reset\\\" class=\\\"btn btn-raised btn-warning mr-1 btncancel\\\"\\n                                        (click)=\\\"onCancel()\\\">\\n                                        <i class=\\\"fa fa-close\\\"></i>\\n                                        {{'Cancel' | translate}}\\n                                    </button>\\n                                    <button *ngIf=formEditMode\\n                                        [ngClass]=\\\"id === 0 ? 'btn btn-primary mr-1 btnsave':'btn btn-primary mr-1 btnupdate'\\\"\\n                                        type=\\\"submit\\\" (click)=\\\"onSubmit()\\\">\\n                                        <i class=\\\"fa fa-save\\\"></i>\\n                                        {{submitbtn | translate}}\\n                                    </button>\\n                                </div>\\n\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \".danger {\\n  color: #ff586b !important;\\n  text-transform: capitalize;\\n}\\n\\n.input_with_icon {\\n  position: relative;\\n}\\n\\n.pass_icon {\\n  position: absolute;\\n  right: 2%;\\n  top: 30%;\\n}\\n\\n.attachment_img {\\n  width: 100px;\\n  height: 92px;\\n  border-radius: 16%;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtFQUNBLDBCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxrQkFBQTtBQUVKOztBQUFBO0VBQ0ksa0JBQUE7RUFDRSxTQUFBO0VBQ0EsUUFBQTtBQUdOOztBQURFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNELGVBQUE7QUFJSCIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhbmdlciB7XG4gICAgY29sb3IgICAgICAgICA6ICNmZjU4NmIgIWltcG9ydGFudDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbi5pbnB1dF93aXRoX2ljb257XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4ucGFzc19pY29ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAyJTtcbiAgICAgIHRvcDogMzAlO1xuICB9XG4gIC5hdHRhY2htZW50X2ltZ3tcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgaGVpZ2h0OiA5MnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE2JTtcbiAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfSJdfQ== */\";"],"sourceRoot":"webpack:///"}